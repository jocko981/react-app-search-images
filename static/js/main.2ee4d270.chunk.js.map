{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","e","preventDefault","props","onSubmit","className","this","type","placeholder","value","onChange","setState","target","toUpperCase","onClick","React","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","image","description","urls","style","gridRowEnd","ref","alt","src","regular","ImageList","images","map","id","App","onSearchSubmit","a","unsplash","get","params","query","per_page","response","data","results","console","log","marginTop","length","ReactDOM","render","document","querySelector"],"mappings":"8QAEeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,2BACTC,QAAS,CACLC,cAAe,2DC4BRC,G,kNA5BXC,MAAQ,CAAEC,KAAM,I,EAEhBC,aAAe,SAACC,GACdA,EAAEC,iBACF,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,uDAIzB,IAAD,OACP,OACG,sBAAKM,UAAU,aAAf,UACE,sBAAMD,SAAUE,KAAKN,aAAcK,UAAU,UAA7C,SACG,sBAAKA,UAAU,QAAf,UACE,uDACA,uBACEE,KAAK,OACLC,YAAY,kBACZC,MAAOH,KAAKR,MAAMC,KAClBW,SAAU,SAACT,GAAO,EAAKU,SAAS,CAACZ,KAAME,EAAEW,OAAOH,MAAMI,wBAI7D,wBAAQC,QAASR,KAAKN,aAAcK,UAAU,oBAA9C,2B,GAxBeU,IAAMC,YCgCfC,G,wDA/BX,WAAYd,GAAQ,IAAD,8BACf,cAAMA,IAWVe,SAAW,WACP,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAC/BC,EAAQC,KAAKC,KAAKN,EAAS,IAEjC,EAAKR,SAAS,CAAEY,MAAOA,KAbvB,EAAKzB,MAAQ,CAAEyB,MAAO,GAEtB,EAAKH,SAAWL,IAAMW,YALP,E,gEASfpB,KAAKc,SAASC,QAAQM,iBAAiB,OAAQrB,KAAKY,Y,+BAU9C,IAAD,EAEuBZ,KAAKH,MAAMyB,MAAhCC,EAFF,EAEEA,YAAaC,EAFf,EAEeA,KAEpB,OACI,qBAAKC,MAAO,CAAEC,WAAW,QAAD,OAAU1B,KAAKR,MAAMyB,QAA7C,SACI,qBAAKU,IAAK3B,KAAKc,SAAUc,IAAKL,EAAaM,IAAKL,EAAKM,gB,GA3B7CrB,IAAMC,YCSfqB,EAPG,SAAClC,GACf,IAAMmC,EAASnC,EAAMmC,OAAOC,KAAK,SAACX,GAC9B,OAAO,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAMY,OAEjC,OAAQ,qBAAKnC,UAAU,aAAf,SAA6BiC,KC0B1BG,E,4MAzBb3C,MAAQ,CAAEwC,OAAQ,I,EAElBI,e,uCAAiB,WAAO3C,GAAP,eAAA4C,EAAA,sEACQC,EAASC,IAAI,iBAAkB,CACpDC,OAAQ,CAAEC,MAAOhD,EAAOiD,SAAU,MAFrB,OACTC,EADS,OAKd,EAAKtC,SAAS,CAAE2B,OAAQW,EAASC,KAAKC,UAEtCC,QAAQC,IAAI,EAAKvD,MAAMwC,QAPT,2C,6GAcf,OACA,sBAAKjC,UAAU,eAAe0B,MAAO,CAACuB,UAAW,QAAjD,UACE,cAAC,EAAD,CAAWlD,SAAUE,KAAKoC,iBACzBpC,KAAKR,MAAMwC,OAAOiB,OAFrB,UAGE,cAAC,EAAD,CAAWjB,OAAQhC,KAAKR,MAAMwC,gB,GAtBlBvB,IAAMC,WCDxBwC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.2ee4d270.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://api.unsplash.com\",\r\n    headers: { \r\n        Authorization: \"Client-ID lTiv_NNY9iIDfXZkbjlA4iJDqCteeO7_aA3c5PFbRxk\" \r\n    }\r\n});","import React from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nclass SearchBar extends React.Component {\r\n\r\n    state = { term: \"\" };\r\n\r\n    onFormSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.props.onSubmit(this.state.term); \r\n      // in class based comp we need to write: this.props.\r\n    }\r\n\r\n  render() {\r\n    return (\r\n       <div className=\"ui segment\">\r\n         <form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n            <div className=\"field\">\r\n              <label>Image Search time!</label>\r\n              <input \r\n                type=\"text\" \r\n                placeholder=\"Type in here...\" \r\n                value={this.state.term} \r\n                onChange={(e) => {this.setState({term: e.target.value.toUpperCase()})}} \r\n              />\r\n            </div>\r\n         </form>\r\n         <button onClick={this.onFormSubmit} className=\"ui button primary\">Search</button>\r\n       </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;","import React from \"react\";\r\n\r\nclass ImageCard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { spans: 0 };\r\n\r\n        this.imageRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.imageRef.current.addEventListener(\"load\", this.setSpans);\r\n    }\r\n\r\n    setSpans = () => {\r\n        const height = this.imageRef.current.clientHeight;\r\n        const spans = Math.ceil(height / 18);  \r\n        \r\n        this.setState({ spans: spans });\r\n    }\r\n\r\n    render() {\r\n\r\n        const {description, urls} = this.props.image;\r\n\r\n        return (\r\n            <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\r\n                <img ref={this.imageRef} alt={description} src={urls.regular} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageCard;","import \"./ImageList.css\";\r\nimport React from \"react\";\r\nimport ImageCard from \"./ImageCard\";\r\n\r\nconst ImageList = (props) => {\r\n    const images = props.images.map( (image) => {\r\n        return <ImageCard key={image.id} image={image} />\r\n    });\r\n    return (<div className=\"image-list\">{images}</div>);\r\n};\r\n\r\nexport default ImageList;","import React from \"react\";\r\nimport unsplash from \"../api/unsplash\"; \r\n//Third party Packages or Dep-cies !ABOVE! imports for files\r\nimport SearchBar from \"./SearchBar\";\r\nimport ImageList from \"./ImageList\";\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  state = { images: [] };\r\n\r\n  onSearchSubmit = async (term) => {\r\n    const response = await unsplash.get(\"/search/photos\", { \r\n      params: { query: term , per_page: 32 }    \r\n    });\r\n      \r\n     this.setState({ images: response.data.results });\r\n\r\n     console.log(this.state.images);\r\n     \r\n     //.then( (response) => { console.log(response.data.results);}); One way\r\n  };\r\n\r\n\r\n   render() {\r\n    return (\r\n    <div className=\"ui container\" style={{marginTop: \"10px\"}}>\r\n      <SearchBar onSubmit={this.onSearchSubmit} />\r\n      {this.state.images.length} images \r\n      <ImageList images={this.state.images} />\r\n    </div>);\r\n   }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));"],"sourceRoot":""}